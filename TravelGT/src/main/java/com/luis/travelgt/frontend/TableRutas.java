/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.luis.travelgt.frontend;

import com.luis.travelgt.objetos.Arista;
import com.luis.travelgt.objetos.GrafoDirigido;
import com.luis.travelgt.objetos.Ruta;
import com.luis.travelgt.objetos.utiles.Utiles;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis
 */
public class TableRutas extends javax.swing.JFrame {

    private GrafoDirigido grafo;
    private DefaultTableModel model;
    private String origen;
    private String destino;
    private List<Ruta> rutas;
    private Utiles utiles;
    private int param;

    /**
     * Creates new form Frame
     */
    public TableRutas(GrafoDirigido grafo, String origen, String destino, int param, List<Ruta> rutas) {
        initComponents();
        setLocationRelativeTo(null);
        this.utiles = new Utiles();
        this.grafo = grafo;
        this.destino = destino;
        this.origen = origen;
        this.param = param;
        this.rutas = rutas;
        setTable();

        if (param == 1) {
            setTableDetalleRuta();
        } else if (param == 2) {
            setTableDetalleRutaVehiculo();
        }

        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/travel.jpeg")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDetalleRutas = new rojerusan.RSTableMetro();
        jPanel1 = new javax.swing.JPanel();
        labelHeader1 = new org.edisoncor.gui.label.LabelHeader();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRutas = new rojerusan.RSTableMetro();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 153));

        jTabbedPane1.setBackground(new java.awt.Color(0, 51, 153));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jPanel2.setForeground(new java.awt.Color(0, 51, 153));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        tableDetalleRutas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Detalle de la ruta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableDetalleRutas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tableDetalleRutas.setBackgoundHead(new java.awt.Color(51, 51, 51));
        tableDetalleRutas.setBackgoundHover(new java.awt.Color(51, 51, 51));
        tableDetalleRutas.setColorPrimaryText(new java.awt.Color(102, 102, 102));
        tableDetalleRutas.setColorSecundaryText(new java.awt.Color(51, 51, 51));
        tableDetalleRutas.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tableDetalleRutas.setPositionText(rojerusan.RSTableMetro.POSITION_TEXT.LEFT);
        tableDetalleRutas.setSelectionBackground(new java.awt.Color(153, 153, 153));
        jScrollPane2.setViewportView(tableDetalleRutas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("RUTA MAS CORTA, MAS LARGA", jPanel2);

        labelHeader1.setText("RUTAS");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        tableRutas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Rutas disponibles"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRutas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tableRutas.setBackgoundHead(new java.awt.Color(51, 51, 51));
        tableRutas.setBackgoundHover(new java.awt.Color(51, 51, 51));
        tableRutas.setColorPrimaryText(new java.awt.Color(102, 102, 102));
        tableRutas.setColorSecundaryText(new java.awt.Color(51, 51, 51));
        tableRutas.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tableRutas.setSelectionBackground(new java.awt.Color(153, 153, 153));
        jScrollPane1.setViewportView(tableRutas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelHeader1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(labelHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("VER TODAS LA RUTAS", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setTable() {
        model = (DefaultTableModel) tableRutas.getModel();
        model.setRowCount(0);
        for (int i = 0; i < rutas.size(); i++) {
            String[] data = {rutas.get(i).getId() + "", utiles.getRuta(rutas.get(i).getAristas(), origen, destino)};
            model.addRow(data);
        }
    }

    private void setTableDetalleRuta() {

        model = (DefaultTableModel) tableDetalleRutas.getModel();
        model.setRowCount(0);

        List<Ruta> list = new ArrayList<>(rutas);

        String[] titulo1 = {"", " MEJOR RUTA EN BASE A DISTANCIA, DESGASTE Y RAPIDEZ"};
        //mejor ruta desgaste-distancia
        Comparator<Ruta> ordenarPorDesgasteDistancia = Comparator.comparing(Ruta::getDesgasteDistanciaTotal);
        list.sort(ordenarPorDesgasteDistancia);

        String[] data1 = {"", " Mejor ruta en base a la distancia y desgaste físico"};
        String[] data = {list.get(0).getId() + "",
            " Distancia total: "
            + list.get(0).getDistanciaTotal()
            + "      Desgaste desgaste físico total: " + rutas.get(0).getDesgasteTotal()};
        //solo desgaste
        Comparator<Ruta> mejorDesgaste = Comparator.comparing(Ruta::getDesgasteTotal);
        list.sort(mejorDesgaste);

        String[] data2 = {"", " Mejor ruta en base al desgaste físico"};
        String[] data22 = {list.get(0).getId() + "",
            " Desgaste desgaste físico total: " + rutas.get(0).getDesgasteTotal()};
        //solo distancia
        Comparator<Ruta> mejorDistancia = Comparator.comparing(Ruta::getDistanciaTotal);
        list.sort(mejorDistancia);

        String[] data3 = {"", " Mejor ruta en base a la distancia"};
        String[] data33 = {list.get(0).getId() + "",
            " Distancia total: " + list.get(0).getDistanciaTotal()};
        //ruta mas rapida
        Comparator<Ruta> masRapido = Comparator.comparing(Ruta::getRapidezPromedioApie);
        list.sort(masRapido);
        String[] data4 = {"", " Mejor ruta en base a la rapidez promedio "};
        String[] data44 = {list.get(list.size() - 1).getId() + "",
            " Rapidez promedio: " + list.get(list.size() - 1).getRapidezPromedioApie()};

        /**
         * peores rutas
         */
        String[] titulo = {"", "PEOR RUTA EN BASE A DISTANCIA, DESGASTE Y RAPIDEZ"};
        //en base a distancia y desgaste
        Comparator<Ruta> peorDesgasteDistancia = Comparator.comparing(Ruta::getDesgasteDistanciaTotal);
        list.sort(peorDesgasteDistancia);
        String[] datab = {"", " Ruta mas larga y desgastante"};
        String[] databb = {list.get(list.size() - 1).getId() + "",
            " Distancia total: "
            + list.get(list.size() - 1).getDistanciaTotal()
            + "      Desgaste desgaste físico total: " + list.get(list.size() - 1).getDesgasteTotal()};
        //solo desgaste
        Comparator<Ruta> peorDesgaste = Comparator.comparing(Ruta::getDesgasteTotal);
        list.sort(peorDesgaste);

        String[] datac = {"", " Ruta con mayor desgaste físico"};
        String[] datacc = {list.get(list.size() - 1).getId() + "",
            " Desgaste desgaste físico total: " + list.get(list.size() - 1).getDesgasteTotal()};
        //solo distancia
        Comparator<Ruta> peorDistancia = Comparator.comparing(Ruta::getDistanciaTotal);
        list.sort(peorDistancia);

        String[] datad = {"", " Ruta con mayor distancia"};
        String[] datadd = {list.get(list.size() - 1).getId() + "",
            " Distancia total: " + list.get(list.size() - 1).getDistanciaTotal()};
        //ruta mas rapida
        Comparator<Ruta> menosRapido = Comparator.comparing(Ruta::getRapidezPromedioApie);
        rutas.sort(menosRapido);
        String[] datae = {"", " Ruta más lenta"};
        String[] dataee = {list.get(0).getId() + "",
            " Rapidez promedio: " + list.get(0).getRapidezPromedioApie()};

        model.addRow(titulo1);
        model.addRow(data1);
        model.addRow(data);
        model.addRow(data2);
        model.addRow(data22);
        model.addRow(data3);
        model.addRow(data33);
        model.addRow(data4);
        model.addRow(data44);

        model.addRow(titulo);
        model.addRow(datab);
        model.addRow(databb);
        model.addRow(datac);
        model.addRow(datacc);
        model.addRow(datad);
        model.addRow(datadd);
        model.addRow(datae);
        model.addRow(dataee);

    }

    private void setTableDetalleRutaVehiculo() {
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.edisoncor.gui.label.LabelHeader labelHeader1;
    private rojerusan.RSTableMetro tableDetalleRutas;
    private rojerusan.RSTableMetro tableRutas;
    // End of variables declaration//GEN-END:variables

    public JLabel getLabelHora(){
        return labelHeader1;
    }
}
